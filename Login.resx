<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>